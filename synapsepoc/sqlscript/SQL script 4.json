{
	"name": "SQL script 4",
	"properties": {
		"content": {
			"query": "CREATE PROCEDURE AggregateDuplicatedTripFareData_withStats\nAS\n    --increase data size then run an aggregation. Trying to trigger some data movement while we are at it\n    --at DW100 this took about __ minutes to run\n\n    --Make the data bigger in TempDB\n    CREATE TABLE #DuplicatedFares\n    WITH (Distribution = ROUND_ROBIN, HEAP)\n    AS\n    (\n        SELECT * FROM FaresData\n    )\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    INSERT INTO #DuplicatedFares SELECT * FROM #DuplicatedFares\n    SELECT COUNT(*) FROM #DuplicatedFares\n\nCREATE STATISTICS fare_amount ON #DuplicatedFares (fare_amount); \nCREATE STATISTICS hack_license ON #DuplicatedFares (hack_license); \nCREATE STATISTICS medallion ON #DuplicatedFares (medallion); \nCREATE STATISTICS mta_tax ON #DuplicatedFares (mta_tax); \nCREATE STATISTICS payment_type ON #DuplicatedFares (payment_type); \nCREATE STATISTICS pickup_datetime ON #DuplicatedFares (pickup_datetime); \nCREATE STATISTICS surcharge ON #DuplicatedFares (surcharge); \nCREATE STATISTICS tip_amount ON #DuplicatedFares (tip_amount); \nCREATE STATISTICS tolls_amount ON #DuplicatedFares (tolls_amount); \nCREATE STATISTICS total_amount ON #DuplicatedFares (total_amount); \nCREATE STATISTICS vendor_id ON #DuplicatedFares (vendor_id);\n\n\n    CREATE TABLE #DuplicatedTrips\n    WITH (Distribution = ROUND_ROBIN, HEAP)\n    AS\n    (\n        SELECT * FROM TripsData\n    )\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    INSERT INTO #DuplicatedTrips SELECT * FROM #DuplicatedTrips\n    SELECT COUNT(*) FROM #DuplicatedTrips\n\n    CREATE STATISTICS dropoff_datetime ON #DuplicatedTrips (dropoff_datetime); \n    CREATE STATISTICS medallion ON #DuplicatedTrips (medallion); \n    CREATE STATISTICS hack_license ON #DuplicatedTrips (hack_license); \n\n    --Aggregate fares by passenger count\n    SELECT count(T.Medallion) as Number_Trips,\n    sum(convert(DECIMAL(16,4), F.fare_amount)) AS FareAmount,\n    convert(INT, T.passenger_count) AS PassengerCount,\n    avg(convert(DECIMAL(16,4), F.fare_amount)) AS AvgFare\n    FROM #DuplicatedTrips T\n    JOIN #DuplicatedFares F \n    on T.medallion = F.medallion\n    AND t.pickup_datetime = f.pickup_datetime\n    GROUP BY T.passenger_count\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "conktovskdzc75xepocws1p1",
				"poolName": "conktovskdzc75xepocws1p1"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}