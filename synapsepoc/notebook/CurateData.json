{
	"name": "CurateData",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "09e4954c-604e-4a6f-9a7c-c567e070b931"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"tableName = 'call_center'"
				],
				"execution_count": null
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"1. read from enriched zone\r\n",
					"2. merge today's data into delta lake tables"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql import functions as F\r\n",
					"from pyspark.sql.types import *\r\n",
					"import datetime\r\n",
					"\r\n",
					"\r\n",
					"objDate = datetime.datetime.now()\r\n",
					"year = objDate.strftime(\"%Y\")\r\n",
					"month = objDate.strftime(\"%m\")\r\n",
					"day = objDate.strftime(\"%d\")\r\n",
					"\r\n",
					"#strFolder = year + \"_\" + month + \"_\" + day\r\n",
					"strFolder = year + \"/\" + month + \"/\" + day\r\n",
					"\r\n",
					"# Storage Info\r\n",
					"accountName='synapsetiphackathonadls'\r\n",
					"containerSourceName='enriched'\r\n",
					"continerDestName='curated'\r\n",
					"\r\n",
					"sourcePath = tableName\r\n",
					"destPath=tableName + '/' + strFolder\r\n",
					"\r\n",
					"print('table: ' + sourcePath)\r\n",
					"adls_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (containerSourceName, accountName, sourcePath)\r\n",
					"print('Source path: ' + adls_path)\r\n",
					"adls_dest_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (continerDestName, accountName, destPath)\r\n",
					"print('Dest path: ' + adls_dest_path)\r\n",
					"\r\n",
					"#read parquet files\r\n",
					"df = spark.read.parquet(adls_path)\r\n",
					"print(df.count(), ' Total Records')\r\n",
					"\r\n",
					"\r\n",
					""
				],
				"execution_count": null
			}
		]
	}
}